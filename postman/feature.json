{
	"info": {
		"_postman_id": "df11b587-32e1-4f54-a725-c48ee1e1e75c",
		"name": "feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27050482"
	},
	"item": [
		{
			"name": "User create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Has user create response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"User 1\",\n  \"email\": \"user1@mail.ru\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Friend Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Has user create response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"User 2\",\n  \"email\": \"user2@mail.ru\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "User id=1 add friend id=2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/friends/:friendId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"friends",
						":friendId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{uid}}",
							"description": "(Required)"
						},
						{
							"key": "friendId",
							"value": "{{fid}}",
							"description": "(Required) "
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User id=1 add friend unknown id=-1 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Has error response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/friends/:friendId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"friends",
						":friendId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{uid}}",
							"description": "(Required) "
						},
						{
							"key": "friendId",
							"value": "-1",
							"description": "(Required) "
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User id=2 add friend id=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/friends/:friendId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"friends",
						":friendId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{fid}}",
							"description": "(Required)"
						},
						{
							"key": "friendId",
							"value": "{{uid}}",
							"description": "(Required) "
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User id=1 get friends",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Test list friend response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/friends",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"friends"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{uid}}",
							"description": "(Required) "
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Category",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Has category create response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Category 1\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/admin/categories?Content-Type=application/json&Accept=*/*",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"categories"
					],
					"query": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Accept",
							"value": "*/*"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User id=1 create Event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Has event create response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"annotation\": \"A grandiose soundtrack show from the Imperial Orchestra Symphony Orchestra (St. Petersburg) as part of a large concert tour of Russia!\",\r\n  \"category\": 1,\r\n  \"description\": \"Hans Zimmer's Universe is a symphonic show from the creators of the acclaimed Cinema Medley project, a show that has already been seen by hundreds of thousands of viewers, and now you can see it!\",\r\n  \"eventDate\": \"2023-09-30 20:00:00\",\r\n  \"location\":{\"lat\":17.2872,\"lon\":17.27},\r\n  \"title\": \"Cinema Medley: Hans Zimmerâ€™s Universe\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Publish Event id=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stateAction\": \"PUBLISH_EVENT\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/admin/events/:eventId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"events",
						":eventId"
					],
					"variable": [
						{
							"key": "eventId",
							"value": "{{eid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User id=2 create Event Request for Event id=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Has event request create response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/requests?eventId={{eid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"requests"
					],
					"query": [
						{
							"key": "eventId",
							"value": "{{eid}}"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{fid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User id=1 get friends events",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Test list friends events response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/friends/feed",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"friends",
						"feed"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User id=1 remove friend id=2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:id/friends/:friendId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":id",
						"friends",
						":friendId"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{uid}}",
							"description": "(Required) "
						},
						{
							"key": "friendId",
							"value": "{{fid}}",
							"description": "(Required) "
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "uid",
			"value": "1"
		},
		{
			"key": "fid",
			"value": "2"
		},
		{
			"key": "eid",
			"value": "1"
		}
	]
}